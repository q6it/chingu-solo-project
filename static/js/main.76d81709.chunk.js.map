{"version":3,"sources":["components/atoms/Input/index.jsx","services/api.js","services/authentication/actions.js","services/authentication/index.js","hooks/useAuth.jsx","routes/Login/index.jsx","routes/Register/Register.jsx","routes/PrivateRoute.jsx","services/authentication/selectors.js","components/molecules/EditForm.jsx","components/organisms/ItemsList.jsx","components/layouts/AppLayout/index.jsx","routes/Router.jsx","services/store.js","App.jsx","index.jsx"],"names":["Input","React","forwardRef","ref","title","type","name","id","value","placeholder","autoComplete","className","onChange","htmlFor","propTypes","PropTypes","string","oneOfType","number","func","isRequired","defaultProps","undefined","baseUrl","getItems","token","a","axios","get","headers","Authorization","items","data","login","email","password","post","userData","registerAccount","message","savePost","body","userId","updatePost","put","deletePost","delete","setCredentials","createAction","deleteCredentials","initialState","authenticationSlice","createSlice","extraReducers","builder","addCase","state","payload","authContext","createContext","ProvideAuth","children","auth","dispatch","useDispatch","useState","user","setUser","signIn","userEmail","refreshToken","useEffect","signOut","useProvideAuth","Provider","useAuth","useContext","Login","history","useHistory","useForm","register","handleSubmit","onSubmit","jsCookie","set","push","console","error","required","to","Register","formData","PrivateRoute","rest","render","pathname","selectUser","createSelector","authentication","EditForm","posts","setPosts","setPostEdit","useSelector","currentPost","setCurrentPost","e","target","handleTitleChange","rows","handleBodyChange","ItemsList","edit","postEdit","handleDelete","filter","p","handleEdit","map","onClick","classNames","classes","Boolean","join","Layout","postId","setPostId","postsData","as","open","src","alt","Button","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","remove","Panel","imageUrl","defaultValue","Router","path","component","LoginRoute","exact","rootReducer","combineReducers","authenticationReducer","store","configureStore","reducer","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d81709.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = React.forwardRef(\n    ({ title, type, name, id, value, placeholder, autoComplete, className, onChange }, ref) => (\n        <div>\n            <label htmlFor={name} className=\"block text-sm font-medium text-gray-700\">\n                {title}\n            </label>\n            <div className={className}>\n                <input\n                    type={type}\n                    name={name}\n                    id={id}\n                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                    autoComplete={autoComplete}\n                    ref={ref}\n                />\n            </div>\n        </div>\n    ),\n);\n\nInput.propTypes = {\n    title: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    autoComplete: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onChange: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n    title: '',\n    type: 'text',\n    name: '',\n    id: '',\n    placeholder: '',\n    value: undefined,\n    autoComplete: 'off',\n    className: '',\n};\n\nexport default Input;\n","import axios from 'axios';\n\nconst baseUrl =\n    process.env.NODE_ENV === 'development'\n        ? 'http://localhost:3001'\n        : 'https://chingu-be.herokuapp.com';\n\n// TODO: create axios instance to prevent calling for base url\n// const instance = axios.create()\n\nexport const getItems = async (token) => {\n    const {\n        data: { items },\n    } = await axios.get(`${baseUrl}/v1/items/all`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n\n    return items;\n};\n\nexport const login = async (email, password) => {\n    const { data: userData } = await axios.post(`${baseUrl}/v1/auth/login`, {\n        email,\n        password,\n    });\n\n    return userData;\n};\n\nexport const registerAccount = async ({ email, password, name }) => {\n    const { data } = await axios.post(`${baseUrl}/v1/auth/register`, {\n        email,\n        password,\n        name,\n    });\n    return data.message;\n};\n\nexport const savePost = async ({ title, body, id, userId }, token) => {\n    const { data } = await axios.post(\n        `${baseUrl}/v1/items/save`,\n        { title, body, id, userId },\n        {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        },\n    );\n    return data.message;\n};\n\nexport const updatePost = async ({ title, body, id, userId }, token) => {\n    const { data } = await axios.put(\n        `${baseUrl}/v1/items/update`,\n        { title, body, id, userId },\n        {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        },\n    );\n    return data.message;\n};\n\nexport const deletePost = async ({ id, userId }, token) => {\n    const { data } = await axios.delete(`${baseUrl}/v1/items/delete`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n        data: { id, userId },\n    });\n    return data.message;\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setCredentials = createAction('authentication/login');\nexport const deleteCredentials = createAction('authentication/logout');\n","import { createSlice } from '@reduxjs/toolkit';\nimport { setCredentials, deleteCredentials } from './actions';\n\nconst initialState = {\n    name: null,\n    token: null,\n    email: null,\n};\n\nconst authenticationSlice = createSlice({\n    name: 'authenticate',\n    initialState,\n    extraReducers: (builder) => {\n        builder\n            .addCase(setCredentials, (state, { payload }) => {\n                if (payload.name) {\n                    state.name = payload.name;\n                    state.email = payload.email;\n                }\n                if (payload.token) {\n                    // jsCookie.set('accessToken', payload.accessToken);\n                    state.token = payload.token;\n                }\n            })\n            .addCase(deleteCredentials, () => initialState);\n    },\n});\n\nexport { setCredentials, deleteCredentials };\n\nexport default authenticationSlice.reducer;\n","import React, { useEffect, useContext, createContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '@services/api';\nimport { setCredentials } from 'src/services/authentication';\n\nconst authContext = createContext();\n\nconst useProvideAuth = () => {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState(null);\n\n    const signIn = async (email, password) => {\n        const userData = await login(email, password);\n        const { email: userEmail, name, refreshToken } = userData;\n        dispatch(setCredentials({ email: userEmail, name, token: refreshToken }));\n        setUser(userData);\n        return userData;\n    };\n\n    const signOut = () => {\n        setUser(null);\n    };\n\n    useEffect(() => {}, []);\n\n    return { signIn, signOut, user };\n};\n\nexport function ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nProvideAuth.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport const useAuth = () => useContext(authContext);\n","import React from 'react';\n\nimport { useForm } from 'react-hook-form';\n// import { login } from 'src/services/api';\nimport { useHistory, Link } from 'react-router-dom';\n// import { useDispatch /* , useSelector */ } from 'react-redux';\nimport { useAuth } from '@hooks/useAuth';\nimport jsCookie from 'js-cookie';\n// import { selectUser } from '@services/authentication/selectors';\n\nimport Input from '@components/atoms/Input';\n\n// import { setCredentials } from '@services/authentication';\n\nconst Login = () => {\n    const history = useHistory();\n    // const dispatch = useDispatch();\n    const auth = useAuth();\n\n    const { register, handleSubmit } = useForm();\n    // const user = useSelector(selectUser);\n\n    const onSubmit = async ({ email, password }) => {\n        try {\n            // const { email: userEmail, name, refreshToken } = await login(email, password);\n            const userData = await auth.signIn(email, password);\n            // const { email: userEmail, name, refreshToken } = auth.user;\n            // dispatch(setCredentials({ email: userEmail, name, token: refreshToken }));\n            if (userData.refreshToken) {\n                jsCookie.set('token', userData.refreshToken);\n                history.push('/');\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    // TODO: refactor form, button as atom\n    return (\n        <div className=\"h-screen w-screen\">\n            <div className=\"flex justify-center items-center flex-col pt-20 m-auto\">\n                <h1>Login</h1>\n                <form\n                    onSubmit={handleSubmit(onSubmit)}\n                    className=\"p-8 flex justify-center items-center flex-col\"\n                >\n                    <div>\n                        <Input\n                            id=\"email\"\n                            title=\"Email\"\n                            type=\"email\"\n                            className=\"mt-2\"\n                            placeholder=\"example@site.com\"\n                            // register={register}\n                            required\n                            {...register('email')}\n                        />\n                    </div>\n                    <div className=\"mt-4\">\n                        <Input\n                            id=\"password\"\n                            title=\"Password\"\n                            type=\"password\"\n                            className=\"mt-2\"\n                            placeholder=\"type password here\"\n                            // register={register}\n                            {...register('password')}\n                            required\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"mt-8 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                        Login\n                    </button>\n                </form>\n\n                <p className=\"text-sm italic text-right text-purple-600\">\n                    Not a member yet?{' '}\n                    <Link to=\"/register\" className=\"text-primary-500 underline hover:text-blue-400\">\n                        Register!\n                    </Link>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { registerAccount } from 'src/services/api';\nimport Input from 'src/components/atoms/Input';\nimport { useHistory } from 'react-router-dom';\n\nconst Register = () => {\n    const { handleSubmit, register } = useForm();\n    const history = useHistory();\n    const onSubmit = async (formData) => {\n        try {\n            await registerAccount(formData);\n            history.push('/login');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    // TODO: refactor form, button as atom\n    return (\n        <div className=\"h-screen w-screen\">\n            <div className=\"flex justify-center items-center flex-col pt-20 m-auto\">\n                <h1>Account registration</h1>\n                <form\n                    onSubmit={handleSubmit(onSubmit)}\n                    className=\"p-8 flex justify-center items-center flex-col\"\n                    autoComplete=\"off\"\n                >\n                    <Input\n                        id=\"name\"\n                        title=\"Name\"\n                        type=\"text\"\n                        className=\"mt-2\"\n                        placeholder=\"Your name\"\n                        // register={register}\n                        required\n                        {...register('name')}\n                    />\n                    <div className=\"mt-4\">\n                        <Input\n                            id=\"email\"\n                            title=\"Email\"\n                            type=\"email\"\n                            className=\"mt-2\"\n                            placeholder=\"example@site.com\"\n                            required\n                            {...register('email')}\n                        />\n                    </div>\n                    <div className=\"mt-4\">\n                        <Input\n                            id=\"password\"\n                            title=\"Password\"\n                            type=\"password\"\n                            className=\"mt-2\"\n                            placeholder=\"type password here\"\n                            autoComplete=\"off\"\n                            {...register('password')}\n                            required\n                        />\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"mt-8 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                        Register\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport jsCookie from 'js-cookie';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n    const token = jsCookie.get('token') || null;\n    return (\n        <Route\n            {...rest}\n            render={() => (token ? children : <Redirect to={{ pathname: '/login' }} />)}\n        ></Route>\n    );\n};\n\nPrivateRoute.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default PrivateRoute;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectSlice = (state) => state.authentication;\n\nexport const selectUser = createSelector(selectSlice, (auth) => auth);\n","import React, { useState } from 'react';\nimport { updatePost } from 'src/services/api';\nimport { useForm } from 'react-hook-form';\nimport Input from '@components/atoms/Input';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'src/services/authentication/selectors';\n\nconst EditForm = ({ post, posts, setPosts, setPostEdit }) => {\n    const { register, handleSubmit } = useForm();\n    const { token, email } = useSelector(selectUser);\n    const [currentPost, setCurrentPost] = useState(post);\n\n    const handleTitleChange = (e) => {\n        setCurrentPost({ ...currentPost, title: e.target.value });\n    };\n    const handleBodyChange = (e) => {\n        setCurrentPost({ ...currentPost, body: e.target.value });\n    };\n\n    const onSubmit = async (formData) => {\n        try {\n            await updatePost({ ...formData, id: post.id, userId: email }, token);\n            setPosts([...posts, currentPost]);\n            setPostEdit(false);\n        } catch (error) {\n            console.error('🚀 ~ file: EditForm.jsx ~ line 25 ~ onSubmit ~ error', error);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <Input\n                id=\"title\"\n                title=\"Title\"\n                type=\"text\"\n                className=\"mt-1\"\n                {...register('title')}\n                value={currentPost.title}\n                onChange={(e) => handleTitleChange(e)}\n            />\n            <div className=\"mt-3\">\n                <label htmlFor=\"body\" className=\"block text-sm font-medium text-gray-700\">\n                    Body\n                </label>\n                <textarea\n                    rows={4}\n                    name=\"body\"\n                    id=\"body\"\n                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                    {...register('body')}\n                    value={currentPost.body}\n                    onChange={(e) => handleBodyChange(e)}\n                />\n            </div>\n            <div className=\"mt-3\">\n                <button\n                    type=\"submit\"\n                    className=\"px-3 py-1 border border-gray-300 shadow-sm font-medium rounded text-gray-700 bg-green-400 hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                    Done\n                </button>\n            </div>\n        </form>\n    );\n};\n\nEditForm.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    setPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n    setPostEdit: PropTypes.func.isRequired,\n};\n\nexport default EditForm;\n","import { useState } from 'react';\nimport { deletePost } from 'src/services/api';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'src/services/authentication/selectors';\nimport jsCookie from 'js-cookie';\n\nimport EditForm from '../molecules/EditForm';\n\nconst ItemsList = ({ posts, setPosts }) => {\n    const [postEdit, setPostEdit] = useState({ id: null, edit: false });\n    const { email } = useSelector(selectUser);\n    const token = jsCookie.get('token');\n    const handleDelete = async ({ id }) => {\n        await deletePost({ id, userId: email }, token);\n        setPosts([...posts.filter((p) => p.id !== id)]);\n    };\n\n    const handleEdit = async ({ id }) => {\n        await setPostEdit({ id, edit: !postEdit.edit });\n    };\n\n    // TODO: handle post data in redux, too many components relay on it\n\n    return (\n        <div>\n            <div className=\"mt-3 divide-y-2 divide-gray-800\">\n                <ul>\n                    {posts.map((post) => (\n                        <li key={post.id} className=\"py-5\">\n                            {postEdit.id === post.id && postEdit.edit ? (\n                                <EditForm\n                                    post={post}\n                                    posts={posts}\n                                    setPosts={setPosts}\n                                    setPostEdit={setPostEdit}\n                                />\n                            ) : (\n                                <div className=\"relative focus-within:ring-2 focus-within:ring-indigo-500\">\n                                    <h3 className=\"text-sm font-semibold text-gray-800\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"hover:underline focus:outline-none\"\n                                        >\n                                            <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                                            {post.title}\n                                        </button>\n                                    </h3>\n                                    <p className=\"mt-1 text-sm text-gray-600 line-clamp-2\">\n                                        {post.body}\n                                    </p>\n                                </div>\n                            )}\n                            {postEdit.edit || (\n                                <div className=\"flex mt-2\">\n                                    <div>\n                                        <button\n                                            type=\"button\"\n                                            className=\"px-3 border border-transparent font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-5000\"\n                                            onClick={() => handleEdit(post)}\n                                        >\n                                            Edit\n                                        </button>\n                                    </div>\n                                    <div className=\"ml-8\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"px-3 border border-transparent font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-5000\"\n                                            onClick={() => handleDelete(post)}\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nItemsList.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    setPosts: PropTypes.func.isRequired,\n};\n\nexport default ItemsList;\n","import { Fragment, useEffect, useState } from 'react';\nimport { Disclosure, Menu, Transition } from '@headlessui/react';\nimport { MenuIcon, XIcon } from '@heroicons/react/outline';\nimport { useSelector } from 'react-redux';\nimport { useAuth } from 'src/hooks/useAuth';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport jsCookie from 'js-cookie';\n\nimport { selectUser } from '@services/authentication/selectors';\nimport { savePost, getItems } from '@services/api';\n\nimport Input from 'src/components/atoms/Input';\nimport ItemsList from 'src/components/organisms/ItemsList';\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ');\n}\n\nexport default function Layout() {\n    // 10 is used cause of mocked db on backend\n    const [postId, setPostId] = useState(10);\n    const [posts, setPosts] = useState([]);\n    const auth = useAuth();\n    const { register, handleSubmit } = useForm();\n\n    const history = useHistory();\n    const user = useSelector(selectUser);\n    const token = jsCookie.get('token');\n\n    useEffect(() => {\n        (async () => {\n            const postsData = await getItems(token);\n            setPosts(postsData);\n        })();\n    }, []);\n\n    useEffect(() => {\n        if (!user.name) {\n            history.push('/login');\n        }\n    }, []);\n\n    const onSubmit = async (formData) => {\n        setPostId(postId + 1);\n        try {\n            await savePost({ ...formData, id: postId, userId: user.email }, token);\n            setPosts([...posts, { ...formData, id: postId, userId: user.email }]);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const onLogout = () => {\n        auth.signOut();\n        jsCookie.remove('token');\n        history.push('/login');\n    };\n\n    return (\n        <>\n            {user && (\n                <div className=\"min-h-full\">\n                    <Disclosure as=\"nav\" className=\"bg-white border-b border-gray-200 p-1\">\n                        {({ open }) => (\n                            <>\n                                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                    <div className=\"flex justify-between h-16\">\n                                        <div className=\"flex\">\n                                            <div className=\"flex-shrink-0 flex items-center\">\n                                                <img\n                                                    className=\"block lg:hidden h-12 w-auto\"\n                                                    src=\"https://cdn.cdnlogo.com/logos/e/39/ethereum.svg\"\n                                                    alt=\"Workflow\"\n                                                />\n                                                <img\n                                                    className=\"hidden lg:block h-16 w-auto\"\n                                                    src=\"https://cdn.cdnlogo.com/logos/e/39/ethereum.svg\"\n                                                    alt=\"Workflow\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                                            <Menu as=\"div\" className=\"ml-3 relative\">\n                                                <div>\n                                                    <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                                        <span className=\"sr-only\">\n                                                            Open user menu\n                                                        </span>\n                                                        {user.name}\n                                                    </Menu.Button>\n                                                </div>\n                                                <Transition\n                                                    as={Fragment}\n                                                    enter=\"transition ease-out duration-200\"\n                                                    enterFrom=\"transform opacity-0 scale-95\"\n                                                    enterTo=\"transform opacity-100 scale-100\"\n                                                    leave=\"transition ease-in duration-75\"\n                                                    leaveFrom=\"transform opacity-100 scale-100\"\n                                                    leaveTo=\"transform opacity-0 scale-95\"\n                                                >\n                                                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                                                        <Menu.Item>\n                                                            {({ active }) => (\n                                                                <button\n                                                                    type=\"button\"\n                                                                    className={classNames(\n                                                                        active ? 'bg-gray-100' : '',\n                                                                        'block px-4 py-2 text-sm text-gray-700 w-full',\n                                                                    )}\n                                                                    onClick={() => {\n                                                                        onLogout();\n                                                                    }}\n                                                                >\n                                                                    Log out\n                                                                </button>\n                                                            )}\n                                                        </Menu.Item>\n                                                    </Menu.Items>\n                                                </Transition>\n                                            </Menu>\n                                        </div>\n                                        <div className=\"-mr-2 flex items-center sm:hidden\">\n                                            <Disclosure.Button className=\"bg-white inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                                <span className=\"sr-only\">Open main menu</span>\n                                                {open ? (\n                                                    <XIcon\n                                                        className=\"block h-6 w-6\"\n                                                        aria-hidden=\"true\"\n                                                    />\n                                                ) : (\n                                                    <MenuIcon\n                                                        className=\"block h-6 w-6\"\n                                                        aria-hidden=\"true\"\n                                                    />\n                                                )}\n                                            </Disclosure.Button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Disclosure.Panel className=\"sm:hidden\">\n                                    <div className=\"pt-4 pb-3 border-t border-gray-200\">\n                                        <div className=\"flex items-center px-4\">\n                                            <div className=\"flex-shrink-0\">\n                                                <img\n                                                    className=\"h-10 w-10 rounded-full\"\n                                                    src={user.imageUrl}\n                                                    alt=\"\"\n                                                />\n                                            </div>\n                                            <div className=\"ml-3\">\n                                                <div className=\"text-base font-medium text-gray-800\">\n                                                    {user.name}\n                                                </div>\n                                                <div className=\"text-sm font-medium text-gray-500\">\n                                                    {user.email}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-3 space-y-1\">\n                                            <Disclosure.Button>\n                                                {({ active }) => (\n                                                    <button\n                                                        type=\"button\"\n                                                        className={classNames(\n                                                            active ? 'bg-gray-100' : '',\n                                                            'block px-4 py-2 text-sm text-gray-700 w-full',\n                                                        )}\n                                                        onClick={() => {}}\n                                                    >\n                                                        Log out\n                                                    </button>\n                                                )}\n                                            </Disclosure.Button>\n                                        </div>\n                                    </div>\n                                </Disclosure.Panel>\n                            </>\n                        )}\n                    </Disclosure>\n\n                    <div className=\"flex flex-col m-auto justify-center py-10\">\n                        <header>\n                            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <h1 className=\"text-3xl font-bold leading-tight text-gray-900\">\n                                    Postboard\n                                </h1>\n                            </div>\n                        </header>\n                        <main>\n                            <div className=\"container m-auto \">\n                                <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n                                    <div className=\"px-4 py-8 sm:px-0\">\n                                        <div className=\"border-4 border-collapse border-gray-200 rounded-lg h-auto p-5\">\n                                            <form onSubmit={handleSubmit(onSubmit)}>\n                                                <Input\n                                                    id=\"title\"\n                                                    title=\"Title\"\n                                                    type=\"text\"\n                                                    className=\"mt-1\"\n                                                    {...register('title')}\n                                                ></Input>\n                                                <div className=\"mt-3\">\n                                                    <label\n                                                        htmlFor=\"body\"\n                                                        className=\"block text-sm font-medium text-gray-700\"\n                                                    >\n                                                        Body\n                                                    </label>\n                                                    <textarea\n                                                        rows={4}\n                                                        name=\"body\"\n                                                        id=\"body\"\n                                                        className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                                                        defaultValue=\"\"\n                                                        {...register('body')}\n                                                    />\n                                                </div>\n                                                <div className=\"mt-6 flex justify-center items-center \">\n                                                    <button\n                                                        type=\"submit\"\n                                                        className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                    >\n                                                        Add post\n                                                    </button>\n                                                </div>\n                                            </form>\n                                            <ItemsList posts={posts} setPosts={setPosts} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </main>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport LoginRoute from './Login';\nimport Register from './Register/Register';\nimport PrivateRoute from './PrivateRoute';\nimport Layout from '../components/layouts/AppLayout';\n\nconst Router = () => (\n    <Switch>\n        <Route path=\"/login\" component={LoginRoute} />\n        <Route path=\"/register\" component={Register} />\n        <PrivateRoute exact path=\"/\">\n            <Layout />\n        </PrivateRoute>\n    </Switch>\n);\n\nexport default Router;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport authenticationReducer from './authentication';\n\nconst rootReducer = combineReducers({\n    authentication: authenticationReducer,\n});\n\nconst store = configureStore({\n    reducer: rootReducer,\n});\n\nexport default store;\n","import { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ProvideAuth } from 'src/hooks/useAuth';\nimport Router from './routes/Router';\nimport store from './services/store';\n\nconst App = () => (\n    <Provider store={store}>\n        <ProvideAuth>\n            <BrowserRouter>\n                <Router />\n            </BrowserRouter>\n        </ProvideAuth>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n    // window.process,\n);\n"],"sourceRoot":""}